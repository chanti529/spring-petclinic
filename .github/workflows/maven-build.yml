# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
      - name: JFrog CLI Debug and Ping
        run: |
          export JFROG_CLI_LOG_LEVEL=DEBUG
          jf --version
          jf c show
          jf rt ping
      - name: Configure JFrog CLI for Maven
        run: |
          jf mvnc --repo-resolve-releases=petclinic-libs-release --repo-resolve-snapshots=petclinic-libs-snapshot-local --repo-deploy-releases=petclinic-libs-release-local --repo-deploy-snapshots=petclinic-libs-snapshot-local
          jf --version
          jf c show
      - name: Build with Maven (install)
        run: |
          jf mvn install -B -DskipTests
      - name: Deploy with Maven (deploy)
        run: |
          jf mvn deploy -B -DskipTests
      - name: Collect and Publish Build Info
        run: |
          jf rt bce
          jf rt bag
          jf rt bp ${{ github.workflow }}-${{ github.run_id }} ${{ github.run_number }}
